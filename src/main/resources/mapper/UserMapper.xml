<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.onlineshop.mapper.UserMapper" >
    <resultMap id="UserResultMap" type="User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="User_Column_List" >
    id, username, password, phone
  </sql>
    <select id="getUser" resultMap="UserResultMap" parameterType="Integer" >
        select
        <include refid="User_Column_List" />
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUser" resultMap="UserResultMap" parameterType="User">
        select
        <include refid="User_Column_List" />
        from user
        where username=#{username} and password=#{password}
    </select>
    <delete id="deleteUser" parameterType="Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="User" >
    insert into user (id, username, password, phone)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR})
  </insert>
    <insert id="addUser" parameterType="User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="phone != null" >
                phone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateUser" parameterType="User" >
        update user
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <sql id="conditionsSql">
        <where>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%',#{username,jdbcType=VARCHAR},'%')
            </if>
        </where>
    </sql>
    <select id="getUserList" parameterType="java.util.Map" resultMap="UserResultMap">
        SELECT <include refid="User_Column_List" />
        FROM `user`
        <include refid="conditionsSql" />
        <bind name="offset" value="pageSize*(pageNo-1)"/>
        LIMIT #{offset,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </select>
    <select id="getCount" parameterType="java.util.Map" resultType="Integer">
        select count(id)
        from `user`
        <include refid="conditionsSql" />
    </select>
</mapper>