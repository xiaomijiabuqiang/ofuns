<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.onlineshop.mapper.GoodsMapper" >
  <resultMap id="GoodsResultMap" type="Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="typeid" property="typeid" jdbcType="INTEGER" />
    <result column="imgpath" property="imgpath" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="goodsDesc" property="goodsDesc" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Goods_Column_List" >
    id, name, typeid, imgpath, price, goodsDesc, createTime,state
  </sql>
  <select id="getGoods" resultMap="GoodsResultMap" parameterType="Integer" >
    select 
    <include refid="Goods_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
    order by createTime desc
  </select>
  <select id="getGoodsByType" resultMap="GoodsResultMap" parameterType="Integer" >
    select
    <include refid="Goods_Column_List" />
    from goods
    where typeid = #{typeid,jdbcType=INTEGER}
    order by createTime asc
  </select>
<!--  <delete id="deleteGoods" parameterType="Integer" >-->
<!--    delete from goods-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </delete>-->
  <update id="deleteGoods" parameterType="Integer">
    <set>
        <if test="state != 0">
          state = 0,
        </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="Goods" >
    insert into goods (id, name, typeid, 
      imgpath, price, goodsDesc,
      createTime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, 
      #{imgpath,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{goodsDesc,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="saveGoods" parameterType="Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
      <if test="imgpath != null" >
        imgpath,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="goodsDesc != null" >
        goodsDesc,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="imgpath != null" >
        #{imgpath,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="goodsDesc != null" >
        #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateGoods" parameterType="Goods" >
    update goods
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="imgpath != null" >
        imgpath = #{imgpath,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="goodsDesc != null" >
        goodsDesc = #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
    </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Goods" >
    update goods
    set name = #{name,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=INTEGER},
      imgpath = #{imgpath,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      goodsDesc = #{goodsDesc,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <sql id="conditionsSql">
    <where>
        state != 0
      <if test="name != null and name != ''">
        AND name LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
      </if>
      <if test="typeid != null and typeid != ''">
        AND typeid = #{typeid,jdbcType=INTEGER}
      </if>
    </where>
  </sql>
  <select id="getGoodsList" parameterType="java.util.Map" resultMap="GoodsResultMap">
    SELECT <include refid="Goods_Column_List" />
    FROM `goods`
    <include refid="conditionsSql" />
    <bind name="offset" value="pageSize*(pageNo-1)"/>
        LIMIT #{offset,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </select>
  <select id="getCount" parameterType="java.util.Map" resultType="Integer">
    select count(id)
    from `goods`
    <include refid="conditionsSql" />
  </select>
  <update id="updateState" parameterType="java.util.Map" >
    update `goods`
    set state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>