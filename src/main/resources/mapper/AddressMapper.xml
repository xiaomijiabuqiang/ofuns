<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.onlineshop.mapper.AddressMapper" >
  <resultMap id="AddressMap" type="Address" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="isDefault" property="isdefault" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Address_Column_List" >
    id, userid, address, createTime, isDefault, remark
  </sql>
  <select id="getAddress" resultMap="AddressMap" parameterType="Integer" >
    select 
    <include refid="Address_Column_List" />
    from user_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getAddressByUser" resultMap="AddressMap" parameterType="Integer">
    select
    <include refid="Address_Column_List"/>
    from user_address
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteAddress" parameterType="Integer" >
    delete from user_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Address" >
    insert into user_address (id, userid, address,
      createTime, isDefault, remark
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR},
      #{createtime,jdbcType=TIMESTAMP}, #{isdefault,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="addAddress" parameterType="Address" >
    insert into user_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="isdefault != null" >
        isDefault,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdefault != null" >
        #{isdefault,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateAddress" parameterType="Address" >
    update user_address
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdefault != null" >
        isDefault = #{isdefault,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Address" >
    update user_address
    set userid = #{userid,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      isDefault = #{isdefault,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getList" parameterType="java.util.Map" resultMap="AddressMap">
    SELECT <include refid="Address_Column_List" />
    FROM `user_address`
    <bind name="offset" value="pageSize*(pageNo-1)"/>
    LIMIT #{offset,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  <select id="getCount" parameterType="java.util.Map" resultType="Integer">
    select count(id)
    from `user_address`
  </select>
</mapper>